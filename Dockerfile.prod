# Build stage
FROM golang:1.23-alpine AS builder

# Set the working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/main.go

# Build the migration tool
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o migrate ./cmd/migrate/main.go

# Final stage
FROM alpine:latest

# Set the working directory
WORKDIR /root/

# Copy the binary from the builder stage
COPY --from=builder /app/main .
COPY --from=builder /app/migrate .

# Copy the migrations folder
COPY --from=builder /app/cmd/migrate/migrations ./migrations

# Copy template files
COPY --from=builder /app/service/mailer/templates ./service/mailer/templates

# Install necessary runtime dependencies
RUN apk --no-cache add ca-certificates

COPY entrypoint.sh .
RUN chmod +x ./entrypoint.sh

# Expose the application port
EXPOSE 8080

# Run the binary
ENTRYPOINT ["./entrypoint.sh"]  # Use entrypoint script